[{"/Users/nileshbhoi/Desktop/CN/movie-app/src/index.js":"1","/Users/nileshbhoi/Desktop/CN/movie-app/src/components/App.js":"2","/Users/nileshbhoi/Desktop/CN/movie-app/src/reducers/index.js":"3","/Users/nileshbhoi/Desktop/CN/movie-app/src/components/Navbar.js":"4","/Users/nileshbhoi/Desktop/CN/movie-app/src/data.js":"5","/Users/nileshbhoi/Desktop/CN/movie-app/src/components/MovieCard.js":"6","/Users/nileshbhoi/Desktop/CN/movie-app/src/actions/index.js":"7"},{"size":3314,"mtime":1608767180000,"results":"8","hashOfConfig":"9"},{"size":2848,"mtime":1664653000436,"results":"10","hashOfConfig":"9"},{"size":2530,"mtime":1608767140000,"results":"11","hashOfConfig":"9"},{"size":2507,"mtime":1664654676307,"results":"12","hashOfConfig":"9"},{"size":17598,"mtime":1608152748000,"results":"13","hashOfConfig":"9"},{"size":1479,"mtime":1608341984000,"results":"14","hashOfConfig":"9"},{"size":1406,"mtime":1664658585583,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"11d26tj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nileshbhoi/Desktop/CN/movie-app/src/index.js",["34","35","36"],"import * as React from 'react'\nimport {Provider} from 'react-redux'\n\nimport { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './components/App';\nimport movies from './reducers'\nimport rootReducer from './reducers'\nimport AppWrapper from './components/App';\n\n// //curryed form function logger (obj, next, action )/\n// //logger(obj)(next)(action)\n// const logger = function ({ dispatch, getState }) {\n//     return function (next) {\n//         return function  (action) {\n//             //middleware code\n//             console.log('ACTION_TYPE', action.type);\n//             next(action);\n//         }\n//     }\n// };\n\nconst logger = ({ dispatch, getState }) => (next) => (action) => {\n    //logger code\n    if(typeof action !== 'function'){\n        console.log('ACTION_TYPE-->', action.type);\n    } \n    next(action);\n}\n\n// const thunk = ({ dispatch, getState }) => (next) => (action) => {\n//     //logger code \n//     if(typeof action === 'function'){\n//         action(dispatch);\n//         return ;\n//     }\n//     next(action);\n// }\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\nconsole.log('store',store.getState());\n\n// export const StoreContext = createContext();\n\n// console.log('StoreContext', StoreContext);\n\n// class Provider extends React.Component {\n//     render () {\n//         const {store} = this.props;\n//         return (\n//             <StoreContext.Provider value={store}>\n//                 {this.props.children}\n//             </StoreContext.Provider>\n//         )\n//     }\n// }\n\n// //const connectedAppComponent = connect (callback)(App);\n// export function connect(callback) {\n//     return function (Component) {\n//         class ConnectedComponent extends React.Component {\n//             constructor(props) {\n//                 super(props);\n//                 this.unsubscribe = this.props.store.subscribe(() => {\n//                     console.log('Updated');\n//                     this.forceUpdate();\n//                 });\n//             }\n\n//             compontntWillUnmount () {\n//                 this.unsubscribe();\n//             }\n\n//             render() {\n//                 const { store } = this.props;\n//                 const state = store.getState();\n//                 const dataToBePassedAsProps = callback(state);\n//                 return <Component dispatch={store.dispatch} {...dataToBePassedAsProps}/>\n//             }\n//         }\n\n//         class ConnectedComponentWrapper extends React.Component {\n//             render() {\n//                 return (\n//                     <StoreContext.Consumer>\n//                         {(store) => <ConnectedComponent store={store} />}\n//                     </StoreContext.Consumer>\n//                 )\n//             }\n//         }\n//         return ConnectedComponentWrapper;\n\n//     };\n// }\n\n//update store by dispatching actions\n// store.dispatch({\n//     type: 'ADD_MOVIES',\n//     movies: [{name: \"Superman\"}]\n// });\n\n// console.log('AFTER STATE-->', store.getState())\n\nReactDOM.render(\n    <Provider store= { store }>\n        <AppWrapper />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n//Functional component <--> class component",["37","38"],"/Users/nileshbhoi/Desktop/CN/movie-app/src/components/App.js",["39"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { data as moviesList } from '../data';\nimport Navbar from './Navbar';\nimport MovieCard from './MovieCard';\n// import movies from '../reducers';\nimport { addMovies, setShowFavourites } from '../actions'\n// import {connect , StoreContext } from '../index'\n\nclass App extends React.Component {\n  componentDidMount () {\n    \n    this.props.dispatch(addMovies(moviesList))\n    \n    // const {store } = this.props;\n    // //2 (Call back)\n    // store.subscribe(() => {\n    //   console.log('Updated');\n    //   this.forceUpdate();\n    // });\n    // //make api call \n    // //dispatch action \n    \n    // //1\n    // store.dispatch(addMovies(data));\n    \n    // //3\n    // console.log('State-->', this.props.store.getState());\n  }\n\n  isMovieFavourite = (movie) => {\n    const { movies } = this.props;\n    const index = movies.favourites.indexOf(movie);\n\n    if ( index != -1 ){\n      //found the movie\n      return true;\n    }\n\n    return false;\n  }\n  onChangeTab = (val) => {\n    // console.log('HEY');\n    this.props.dispatch(setShowFavourites(val));\n  }\n\n  render() {\n    const { movies, search } = this.props; // { movies: {list:[], favourites:[], }, search: {} }\n    console.log('movie-->', movies); \n    const { list, favourites = [], showFavourites = []} = movies; \n    const displayMovies  = showFavourites ? favourites : list;\n\n    return (\n      <div className=\"App\">\n        {/* <Navbar dispatch={this.props.store.dispatch} search={search}/> */}\n        <Navbar search={search}/>\n        <div className=\"main\">\n          <div className=\"tabs\">\n            <div className={`tab ${ showFavourites ? '' : 'active-tabs' }`} onClick={ () => this.onChangeTab(false) }>Movies</div>\n            <div className={`tab ${ showFavourites ? 'active-tabs' : '' }` } onClick={ () => this.onChangeTab(true) }>favourites</div>\n          </div>\n\n          <div className=\"list\">\n            {displayMovies.map((movie, index) => (\n              <MovieCard \n                movie={movie} \n                key={`movies-${index}`} \n                dispatch={this.props.dispatch} \n                isMovieFavourite= {this.isMovieFavourite(movie)}\n              />\n            ))}\n          </div>\n          <div>\n            {displayMovies.length===0 ? <div className=\"no-movies\">No movies to display!</div>: null}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n}\n\n// class AppWrapper extends React.Component {\n//   render () {\n//     return (\n//       <StoreContext.Consumer>\n//         { (store) => <App store= {store}/> }\n//       </StoreContext.Consumer>\n//     );\n//   } \n// }\n\nfunction mapStateToProps (state) {\n  return {\n    movies: state.movies,\n    search: state.search\n  }\n};\n\nconst connectedAppComponent = connect(mapStateToProps)(App);\nexport default connectedAppComponent;\n","/Users/nileshbhoi/Desktop/CN/movie-app/src/reducers/index.js",["40"],"import { combineReducers } from 'redux';\r\nimport {\r\n    ADD_MOVIES,\r\n    ADD_TO_FAVOURITE,\r\n    REMOVE_FROM_FAVOURITE,\r\n    SET_SHOW_FAVOURITES,\r\n    ADD_MOVIE_TO_LIST,\r\n    ADD_SEARCH_RESULT\r\n} from '../actions'\r\n\r\n\r\nconst initialMoveieState = {\r\n    list: [],\r\n    favourites: [],\r\n    showFavourites: false\r\n}\r\n\r\nexport function movies(state = initialMoveieState, action) {\r\n    // console.log('MOVIES REDUCER', action);\r\n    // if(action.type === ADD_MOVIES){\r\n    //     return {\r\n    //         ...state,\r\n    //         list: action.movies\r\n    //     };\r\n    // }\r\n    // return state;\r\n    switch (action.type) {\r\n        case ADD_MOVIES:\r\n            return {\r\n                ...state,\r\n                list: action.movies\r\n            };\r\n        case ADD_TO_FAVOURITE:\r\n            return {\r\n                ...state,\r\n                favourites: [action.movies, ...state.favourites]\r\n            }\r\n        case REMOVE_FROM_FAVOURITE:\r\n            const filteredArray = state.favourites.filter(\r\n                movie => movie.Title !== action.movie.Title\r\n            );\r\n            return {\r\n                ...state,\r\n                favourites: filteredArray\r\n            }\r\n        case SET_SHOW_FAVOURITES:\r\n            return {\r\n                ...state,\r\n                showFavourites: action.val\r\n            }\r\n            case ADD_MOVIE_TO_LIST:\r\n                return {\r\n                    ...state,\r\n                    list: [action.movie, ...state.list]\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initialSearchState = {\r\n    result: {},\r\n    showSearchResults: false,\r\n};\r\n\r\nexport function search(state = initialSearchState, action) {\r\n    // console.log(\"SEARCH REDUCER\");\r\n    switch (action.type) {\r\n        case ADD_SEARCH_RESULT:\r\n            return {\r\n                ...state,\r\n                result: action.movie,\r\n                showSearchResults: true,\r\n            }\r\n        case ADD_MOVIE_TO_LIST:\r\n            return {\r\n                ...state,\r\n                showSearchResults: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nconst initialRootState = {\r\n    movies: initialMoveieState,\r\n    search: initialSearchState,\r\n};\r\n\r\nexport default function rootReducer(state = initialRootState, action) {\r\n    return {\r\n        movies: movies(state.movies, action),\r\n        search: search(state.search, action),\r\n    };\r\n}\r\n\r\n// export default combineReducers ({\r\n//     movies,\r\n//     search\r\n// });","/Users/nileshbhoi/Desktop/CN/movie-app/src/components/Navbar.js",[],"/Users/nileshbhoi/Desktop/CN/movie-app/src/data.js",[],"/Users/nileshbhoi/Desktop/CN/movie-app/src/components/MovieCard.js",[],"/Users/nileshbhoi/Desktop/CN/movie-app/src/actions/index.js",["41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":23},{"ruleId":"42","severity":1,"message":"46","line":10,"column":8,"nodeType":"44","messageId":"45","endLine":10,"endColumn":11},{"ruleId":"42","severity":1,"message":"47","line":11,"column":8,"nodeType":"44","messageId":"45","endLine":11,"endColumn":14},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":35,"column":16,"nodeType":"54","messageId":"55","endLine":35,"endColumn":18},{"ruleId":"42","severity":1,"message":"56","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"47","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":14},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'movies' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'combineReducers' is defined but never used.","no-global-assign","no-unsafe-negation"]